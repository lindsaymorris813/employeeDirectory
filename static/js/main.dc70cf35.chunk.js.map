{"version":3,"sources":["components/Jumbotron.js","components/SearchField.js","components/SearchResults.js","components/ResultsHeadings.js","utils/API.js","components/SearchContainer.js","App.js","index.js"],"names":["Jumbotron","className","SearchField","handleInputChange","handleFormSubmit","search","onChange","name","type","placeholder","id","value","onClick","SearchResults","results","map","result","scope","src","picture","thumbnail","alt","login","uuid","first","last","dob","age","phone","email","ResultHeadings","headers","sortResults","title","width","style","axios","get","SearchContainer","state","searchResults","sortOrder","renderEmployees","API","then","res","setState","data","catch","err","console","log","event","target","searchEmployees","preventDefault","filter","find","Object","values","join","toLowerCase","indexOf","sortColumn","sort","a","b","compare","nameA","nameB","ageA","ageB","phoneA","phoneB","emailA","emailB","this","ResultsHeadings","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc70cf35.chunk.js","sourcesContent":["function Jumbotron() {\n    return (\n        <div className=\"jumbotron text-center\">\n        <h1>Employee Directory</h1>\n        <p>Search for Colleagues</p>\n        <p>Click Column Name to Sort in Ascending or Descending Order</p>\n    </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\nfunction SearchField({ handleInputChange, handleFormSubmit, search }) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <input\n          onChange={handleInputChange}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for a Colleague\"\n          id=\"search\"\n          value={search}\n        />\n        <button onClick={handleFormSubmit} className=\"btn btn-primary mt-3\">\n          Search\n            </button>\n      </div>\n    </form >\n  );\n}\n\nexport default SearchField;\n","import React from \"react\";\n\nfunction SearchResults({ results }) {\n  return (\n      <tbody>\n      {results.map(result => (\n        <tr>\n        <th scope=\"row\" className=\"text-center\"><img src={result.picture.thumbnail} alt={result.login.uuid} className=\"img-fluid\" /></th>\n        <td className=\"text-center\">{result.name.first} {result.name.last}</td>\n        <td className=\"text-center\">{result.dob.age}</td>\n        <td className=\"text-center\">{result.phone}</td>\n        <td className=\"text-center\">{result.email}</td>\n        \n        </tr>\n      ))}\n      </tbody>\n  );\n}\n\nexport default SearchResults;\n","import React from \"react\";\nimport SearchResults from \"../components/SearchResults\";\n\nfunction ResultHeadings({ results, headers, sortResults }) {\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          {headers.map(({ title, width }) => (\n              <th scope=\"col\" style={{width}} className=\"text-center\" onClick={() => {sortResults(title)}}>{title}</th>\n          ))}\n        </tr>\n      </thead>\n      <SearchResults results={results}/>\n    </table>\n  );\n}\n\nexport default ResultHeadings;\n","import axios from \"axios\";\n\nexport default {\n    search: function() {\n        return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\n    }\n};","import React, { Component } from \"react\";\nimport SearchField from \"./SearchField\";\nimport ResultsHeadings from \"./ResultsHeadings\";\nimport API from \"../utils/API\";\n\nclass SearchContainer extends Component {\n  state = {\n    search: \"\",\n    results: [],\n    searchResults: [],\n    sortOrder: \"descending\",\n    headers: [\n      { title: \"Photo\", width: \"20%\" },\n      { title: \"Name\", width: \"30%\" },\n      { title: \"Age\", width: \"10%\" },\n      { title: \"Phone Number\", width: \"20%\" },\n      { title: \"Email\", width: \"20%\" },\n    ]\n  };\n\n  componentDidMount() {\n    API.search();\n    this.renderEmployees();\n  }\n\n  renderEmployees = () => {\n    API.search()\n      .then(res => this.setState({ results: res.data.results, searchResults: res.data.results }))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n    this.searchEmployees();\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchEmployees();\n\n  };\n\n  searchEmployees = () => {\n    this.setState({\n      searchResults: this.state.results.filter(find => {\n        return Object.values(find).join(\"\").toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n      })\n    })\n  };\n\n  sortResults = (title) => {\n    const sortColumn = title.toLowerCase();\n    const compareFx = (a, b) => {\n      let compare = 0;\n      if (this.state.sortOrder === \"ascending\") {\n        this.setState({ sortOrder: \"descending\" });\n        switch (sortColumn) {\n          case \"name\":\n            let nameA = a.name.last.toLowerCase();\n            let nameB = b.name.last.toLowerCase();\n            if (nameA > nameB) {\n              compare = 1;\n            } else if (nameA < nameB) {\n              compare = -1\n            }\n            return compare;\n          case \"age\":\n            let ageA = a.dob.age;\n            let ageB = b.dob.age;\n            if (ageA > ageB) {\n              compare = 1;\n            } else if (ageA < ageB) {\n              compare = -1;\n            }\n            return compare;\n          case \"phone number\":\n            let phoneA = a.phone;\n            let phoneB = b.phone;\n            if (phoneA > phoneB) {\n              compare = 1;\n            } else if (phoneA < phoneB) {\n              compare = -1;\n            }\n            return compare;\n          case \"email\":\n            let emailA = a.email;\n            let emailB = b.email;\n            if (emailA > emailB) {\n              compare = 1;\n            } else if (emailA < emailB) {\n              compare = -1;\n            }\n            return compare;\n          default:\n            return;\n        }\n      } else {\n        this.setState({ sortOrder: \"ascending\" });\n        switch (sortColumn) {\n          case \"name\":\n            let nameA = a.name.last.toLowerCase();\n            let nameB = b.name.last.toLowerCase();\n            if (nameA > nameB) {\n              compare = -1;\n            } else if (nameA < nameB) {\n              compare = 1\n            }\n            return compare;\n          case \"age\":\n            let ageA = a.dob.age;\n            let ageB = b.dob.age;\n            if (ageA > ageB) {\n              compare = -1;\n            } else if (ageA < ageB) {\n              compare = 1;\n            }\n            return compare;\n          case \"phone number\":\n            let phoneA = a.phone;\n            let phoneB = b.phone;\n            if (phoneA > phoneB) {\n              compare = -1;\n            } else if (phoneA < phoneB) {\n              compare = 1;\n            }\n            return compare;\n          case \"email\":\n            let emailA = a.email;\n            let emailB = b.email;\n            if (emailA > emailB) {\n              compare = -1;\n            } else if (emailA < emailB) {\n              compare = 1;\n            }\n            return compare;\n          default:\n            return;\n        }\n      }\n\n    }\n    this.setState({ searchResults: this.state.results.sort(compareFx) })\n  };\n\n\n  render() {\n    return (\n      <div>\n        <SearchField\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n        <ResultsHeadings\n          results={this.state.searchResults}\n          headers={this.state.headers}\n          sortResults={this.sortResults}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchContainer;\n","import React from \"react\";\nimport JumboTron from \"./components/Jumbotron\";\nimport SearchContainer from \"./components/SearchContainer\";\n\nfunction App() {\n  return (\n    <>\n      <JumboTron />\n      <div className=\"container\">\n      <SearchContainer />\n      </div>\n\n    </>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}